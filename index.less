@import 'syntax-variables';

atom-text-editor, :host {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .gutter-container {
    color: @syntax-gutter-text-color;
    border-right: 1px solid @gutter-border;
    margin-right: 10px;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    border-color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }

  .search-results .marker .region {
    background-color: transparent;
    border: 1px solid @syntax-result-marker-color;
  }

  .search-results .marker.current-result .region {
    border: 1px solid @syntax-result-marker-color-selected;
  }

  .markup {
    &.inserted {
      color: @green;
    }

    &.changed {
      color: @yellow;
    }

    &.deleted {
      color: @bright-red;
    }
  }

  .gfm {
    .markup {
      &.heading {
        color: @green;
        font-weight: bold;
      }

      &.underline {
        color: @orange;
        text-decoration: underline;
      }
    }

    .bold {
      font-weight: bold;
    }

    .italic {
      font-style: italic;
    }

    .raw {
      color: @light-blue;
    }

    .variable.list {
      color: @orange;
      font-weight: bold;
    }

    .link {
      color: @light-gray;

      .entity {
        color: @purple;
      }
    }
  }
}

// interpolated strings: `${this}`
.embedded.source {
  color: @syntax-text-color;
}

.comment {
  color: @light-gray;
}

// constants like: PI, true, 14
.constant {
  &.character,
  &.language,
  &.numeric,
  &.other {
    color: @light-blue;
  }

  // escaped constants: '\n'
  &.escape {
    color: @green;
  }
}

.entity {
  &.name {
    color: @purple;

    // HTML tags: <html>
    &.tag {
      color: @green;
    }
  }

  // css class names
  &.other.attribute-name {
    color: @purple;

    &.parent-selector {
      color: @red;
    }
  }

  &.other.inherited-class {
    font-style: italic;
    text-decoration: none;
    color: @green;
  }
}

.invalid {
  color: @semi-white;
  background-color: @bright-red;

  &.deprecated {
    background-color: @purple;
  }
}

// for, if, while
.keyword {
  color: @red !important;
}

.meta {
  &.class {
    color: @purple;
  }
}

// var, let, const
.storage {
  color: @red;
}

// all sorts of quotes: "", '', ``
.string {
  color: @blue;
}

.support {
  &.constant,
  &.variable,
  &.function,
  // Github doesn't highlight classes
  // &.class,
  &.type {
    color: @light-blue;
  }
}

// language specific variables: this
.variable {
  &.assignment,
  &.language {
    color: @orange;
  }
}

// Jade syntax
.class.jade {
  color: @purple;
}

// Prevent underlines from making their way into whitespace elements
.leading-whitespace,
.trailing-whitespace {
  display: inline-block;
}
